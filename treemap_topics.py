import matplotlib.pyplot as plt
import pandas as pd
import squarify # Import the squarify library
import matplotlib
import datetime # Importar datetime


# 1. Carregar DataFrame df_topic_counts do arquivo CSV (generated by gera_topic_counts_csv.py or similar)
df_topic_counts = pd.read_csv('topic_frequency_messages_bar_chart_data.csv') # Load topic frequency data

# Certifique-se de que df_topic_counts tem colunas 'Tópico' e 'Frequência'
if 'Tópico' not in df_topic_counts.columns or 'Frequência' not in df_topic_counts.columns:
    raise ValueError("DataFrame df_topic_counts must contain columns 'Tópico' and 'Frequência'")


# 2. Preparar Dados para Treemap
topics = df_topic_counts['Tópico'].tolist()
sizes = df_topic_counts['Frequência'].tolist()
colors = plt.cm.Set2(range(len(topics))) # Usar colormap 'Set2'
labels = [f"{topic}\n({size} mensagens)" for topic, size in zip(topics, sizes)] # Labels with topic and frequency


# 3. Gerar Treemap
plt.figure(figsize=(14, 8))
squarify.plot(sizes=sizes,
              label=labels,
              alpha=0.8,
              color=colors)

plt.axis('off') # Remover eixos
plt.title('Distribuição de Tópicos de Discussão nas Mensagens (Treemap)', fontsize=16) # Título do Treemap
plt.tight_layout()

# **Gerar Timestamp para o nome do arquivo**
timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
filename = f'{timestamp}_topic_distribution_treemap_set2.png' # Nome do arquivo com timestamp
plt.savefig(filename) # Salvar Treemap com timestamp no nome do arquivo

plt.show()

print("\nDataFrame df_topic_counts (usado para o Treemap):\n")
print(df_topic_counts.to_string(index=False))